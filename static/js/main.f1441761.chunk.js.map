{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","key","id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","ref","rows","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","fetch","response","ok","Error","json","data","loadedMovies","push","message","method","body","JSON","stringify","headers","console","log","useEffect","content","length","MoviesList","Fragment","onClick","ReactDOM","render","document","getElementById"],"mappings":";6HACAA,EAAOC,QAAU,CAAC,QAAU,4B,mBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,cAAc,kC,uLCajBC,EAVD,SAACC,GACb,OACE,wBAAIC,UAAWC,IAAQC,OACrB,4BAAKH,EAAMI,OACX,4BAAKJ,EAAMK,aACX,2BAAIL,EAAMM,e,gBCWDC,EAfG,SAACP,GACjB,OACE,wBAAIC,UAAWC,IAAQ,gBACpBF,EAAMQ,OAAOC,KAAI,SAACN,GAAD,OAChB,kBAAC,EAAD,CACEO,IAAKP,EAAMQ,GACXP,MAAOD,EAAMC,MACbC,YAAaF,EAAME,YACnBC,YAAaH,EAAMG,mB,wBCgCdM,MAzCf,SAAkBZ,GAChB,IAAMa,EAAWC,iBAAO,IAClBC,EAAiBD,iBAAO,IACxBE,EAAiBF,iBAAO,IAmB9B,OACE,0BAAMG,SAlBR,SAAuBC,GACrBA,EAAMC,iBAIN,IAAMhB,EAAQ,CACZC,MAAOS,EAASO,QAAQC,MACxBf,YAAaS,EAAeK,QAAQC,MACpChB,YAAaW,EAAeI,QAAQC,OAGtCrB,EAAMsB,WAAWnB,GACjBU,EAASO,QAAQC,MAAM,GACvBN,EAAeK,QAAQC,MAAM,GAC7BL,EAAeI,QAAQC,MAAM,KAK3B,yBAAKpB,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOd,GAAG,QAAQe,IAAKb,KAErC,yBAAKZ,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,gBAAf,gBACA,8BAAUG,KAAK,IAAIhB,GAAG,eAAee,IAAKX,KAE5C,yBAAKd,UAAWC,IAAQqB,SACtB,2BAAOC,QAAQ,QAAf,gBACA,2BAAOC,KAAK,OAAOd,GAAG,OAAOe,IAAKV,KAEpC,+C,yyMC0DSY,MA5Ff,WACE,MAA4BC,mBAAS,IAArC,mBAAOrB,EAAP,KAAesB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAqBC,sBAAW,sBAAC,iGACrCJ,GAAa,GACbE,EAAS,MAF4B,kBAIZG,MAAM,oEAJM,WAI7BC,EAJ6B,QAKrBC,GALqB,sBAM3B,IAAIC,MAAM,yBANiB,wBAShBF,EAASG,OATO,QAanC,IAAW/B,KAJLgC,EAT6B,OAW7BC,EAAe,GAEHD,EAChBC,EAAaC,KAAK,CAChBjC,GAAID,EACJN,MAAOsC,EAAKhC,GAAKN,MACjBE,YAAaoC,EAAKhC,GAAKJ,YACvBD,YAAaqC,EAAKhC,GAAKL,cAI3ByB,EAAUa,GAtByB,kDAwBnCT,EAAS,KAAMW,SAxBoB,QA0BrCb,GAAa,GA1BwB,0DA2BpC,IAhCU,4CAsCb,WAA+B7B,GAA/B,yFACyBkC,MAAM,mEAAoE,CAC/FS,OAAQ,OACRC,KAAMC,KAAKC,UAAU9C,GACrB+C,QAAS,CACP,eAAgB,sBALtB,cACQZ,EADR,gBAQqBA,EAASG,OAR9B,OAQQC,EARR,OASES,QAAQC,IAAIV,GATd,4CAtCa,sBAkCbW,qBAAU,WACRlB,MACC,CAACA,IAcJ,IAAImB,EAAU,+CAlDD,4CAgEb,WAAmCnD,GAAnC,yFACyBkC,MAAM,mEAAoE,CAC/FS,OAAQ,SACRC,KAAM5C,EACN+C,QAAS,CACP,eAAgB,sBALtB,cACQZ,EADR,gBAQsBA,EAASG,OAR/B,OAQQC,EARR,OASES,QAAQC,IAAIV,GATd,4CAhEa,sBA8Eb,OA1BIlC,EAAO+C,OAAS,IAClBD,EAAU,kBAACE,EAAD,CAAYhD,OAAQA,KAG5ByB,IACFqB,EAAU,2BAAIrB,IAGZF,IACFuB,EAAU,2CAkBV,kBAAC,IAAMG,SAAP,KACE,iCACE,kBAAC,EAAD,CAAUnC,WAjFH,+CAmFT,iCACE,4BAAQoC,QAASvB,GAAjB,gBACA,4BAAQuB,QArFD,6CAqFP,kBAEF,iCAAUJ,KCvFhBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f1441761.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__y8-mh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__1UuDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__1CNwF\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useRef } from 'react';\r\n\r\nimport classes from './AddMovie.module.css';\r\n\r\nfunction AddMovie(props) {\r\n  const titleRef = useRef('');\r\n  const openingTextRef = useRef('');\r\n  const releaseDateRef = useRef('');\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    // could add validation here...\r\n\r\n    const movie = {\r\n      title: titleRef.current.value,\r\n      openingText: openingTextRef.current.value,\r\n      releaseDate: releaseDateRef.current.value\r\n    };\r\n\r\n    props.onAddMovie(movie); \r\n    titleRef.current.value='';\r\n    openingTextRef.current.value='';\r\n    releaseDateRef.current.value='';\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor='title'>Title</label>\r\n        <input type='text' id='title' ref={titleRef} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='opening-text'>Opening Text</label>\r\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='date'>Release Date</label>\r\n        <input type='text' id='date' ref={releaseDateRef} />\r\n      </div>\r\n      <button>Add Movie</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddMovie;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-5b8c0-default-rtdb.firebaseio.com/movies.json\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key, \n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n \n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []); \n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-5b8c0-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST', \n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p> Loading...</p>;\n  }\n\n  async function deleteMoviesHandler(movie){\n    const response = await fetch('https://react-http-5b8c0-default-rtdb.firebaseio.com/movies.json', {\n      method: 'DELETE',\n      body: movie,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data  = await response.json();\n    console.log(data);\n\n  };\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n        <button onClick={deleteMoviesHandler}>Delete Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}